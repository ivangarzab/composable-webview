name: Prepare Release

on:
  push:
    branches: [master]
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry Run: Only log actions, do not push or create GitHub Release.'
        required: true
        type: boolean
        default: false

jobs:
  github:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Authenticate email
        run: git config user.email "ivangb6@gmail.com"
      - name: Authenticate name
        run: git config user.name "Ivan Garza Bermea"

      - name: Get the release version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}

      - name: Get the current date
        id: get_date
        run: echo $(date +"%Y-%m-%d") | { var=$(cat); echo ::set-output name=VERSION::"${var}"; }

      - name: Welcome message
        run: echo "Preparing a new release for version ${{ steps.get_version.outputs.VERSION }}"

      - uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned"

      - run: echo "Setting up JDK"
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: gradle

      - run: echo "üñ•Ô∏è The workflow is now ready to test your code"
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Create new tag
        run: git tag -a ${{ steps.get_version.outputs.VERSION }} -m "Tagged release ${{ steps.get_version.outputs.VERSION }} on ${{ steps.get_date.outputs.DATE }}"

      - name: Push new tag to origin
        if: ${{ !inputs.dry_run }}
        run: git push origin ${{ steps.get_version.outputs.VERSION }}

      - run: echo "Creating new GitHub Release for version ${{ steps.get_version.outputs.VERSION }}"
        if: ${{ !inputs.dry_run }}

      - name: Create new GitHub Release
        if: ${{ !inputs.dry_run }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: v${{ steps.get_version.outputs.VERSION }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false

  jitpack:
    runs-on: ubuntu-latest
    steps:
      - name: Welcome message
        run: echo "Triggering jitpack master-SNAPSHOT for further use"
      - name: Request master-SNAPSHOT from JitPack
        if: ${{ !inputs.dry_run }}
        run: |
          # timeout in 30 seconds to avoid waiting for build
          curl -s -m 30 https://jitpack.io/com/ivangarzab/composable-webview/master-SNAPSHOT/ || true